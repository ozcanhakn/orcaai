version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: orcaai-postgres
    environment:
      POSTGRES_DB: orcaaidb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123456789
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - orcaai-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d orcaaidb"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: orcaai-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - orcaai-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API Service
  backend:
    build:
      context: ..
      dockerfile: deployment/Dockerfile.backend
    container_name: orcaai-backend
    ports:
      - "8080:8080"
    environment:
      PORT: "8080"
      DB_HOST: "postgres"
      DB_PORT: "5432"
      DB_NAME: "orcaaidb"
      DB_USER: "postgres"
      DB_PASSWORD: "123456789"
      REDIS_ADDR: "redis:6379"
      JWT_SECRET: "your-jwt-secret-here"
      OPENAI_API_KEY: "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"
      CLAUDE_API_KEY: "your-claude-api-key-here"
      GEMINI_API_KEY: "AIzaSyArwjxCVXUMfIBKcNVpS983moJ6Ln6caYM"
      CACHE_ENABLED: "true"
      CACHE_EXPIRATION: "24h"
      RATE_LIMIT: "100"
      RATE_LIMIT_WINDOW: "1h"
      PROMETHEUS_ENABLED: "true"
      LOG_LEVEL: "info"
      PYTHON_WORKER_URL: "http://ai-worker:8001"
      DEBUG: "true"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - orcaai-network
    restart: unless-stopped

  # Python AI Worker
  ai-worker:
    build:
      context: ../python-ai-worker
      dockerfile: Dockerfile
    container_name: orcaai-ai-worker
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - orcaai-network
    restart: unless-stopped

  # Frontend Dashboard
  dashboard:
    build:
      context: ../dashboard
      dockerfile: Dockerfile
    container_name: orcaai-dashboard
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8080
    depends_on:
      - backend
    networks:
      - orcaai-network
    restart: unless-stopped

  # Prometheus for monitoring
  prometheus:
    image: prom/prometheus:v2.45.0
    container_name: orcaai-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - orcaai-network
    restart: unless-stopped

  # Grafana for visualization
  grafana:
    image: grafana/grafana-enterprise
    container_name: orcaai-grafana
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - orcaai-network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  grafana_data:

networks:
  orcaai-network:
    driver: bridge